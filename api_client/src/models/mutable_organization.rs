/*
 * server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MutableOrganization : MutableOrganization is used for creating or updating organization throught the API.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MutableOrganization {
    #[serde(rename = "avatar_email", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub avatar_email: Option<Option<String>>,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "slug")]
    pub slug: String,
}

impl MutableOrganization {
    /// MutableOrganization is used for creating or updating organization throught the API.
    pub fn new(description: String, name: String, slug: String) -> MutableOrganization {
        MutableOrganization {
            avatar_email: None,
            description,
            name,
            slug,
        }
    }
}

