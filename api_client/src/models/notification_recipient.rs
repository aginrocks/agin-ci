/*
 * server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NotificationRecipient {
    #[serde(rename = "read_at", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub read_at: Option<Option<String>>,
    #[serde(rename = "status")]
    pub status: models::NotificationStatus,
    #[serde(rename = "user")]
    pub user: String,
}

impl NotificationRecipient {
    pub fn new(status: models::NotificationStatus, user: String) -> NotificationRecipient {
        NotificationRecipient {
            read_at: None,
            status,
            user,
        }
    }
}

