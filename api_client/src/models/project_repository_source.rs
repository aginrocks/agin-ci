/*
 * server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ProjectRepositorySource {
    #[serde(rename = "github")]
    Github,
    #[serde(rename = "gitea")]
    Gitea,
    #[serde(rename = "genericgit")]
    Genericgit,

}

impl std::fmt::Display for ProjectRepositorySource {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Github => write!(f, "github"),
            Self::Gitea => write!(f, "gitea"),
            Self::Genericgit => write!(f, "genericgit"),
        }
    }
}

impl Default for ProjectRepositorySource {
    fn default() -> ProjectRepositorySource {
        Self::Github
    }
}

