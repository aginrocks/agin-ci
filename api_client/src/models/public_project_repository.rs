/*
 * server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PublicProjectRepository : ProjectRepository object that can be safely sent to the client
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PublicProjectRepository {
    #[serde(rename = "deploy_key_generated")]
    pub deploy_key_generated: bool,
    #[serde(rename = "deploy_public_key", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub deploy_public_key: Option<Option<String>>,
    #[serde(rename = "source")]
    pub source: models::ProjectRepositorySource,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "webhook_secret_generated")]
    pub webhook_secret_generated: bool,
}

impl PublicProjectRepository {
    /// ProjectRepository object that can be safely sent to the client
    pub fn new(deploy_key_generated: bool, source: models::ProjectRepositorySource, url: String, webhook_secret_generated: bool) -> PublicProjectRepository {
        PublicProjectRepository {
            deploy_key_generated,
            deploy_public_key: None,
            source,
            url,
            webhook_secret_generated,
        }
    }
}

