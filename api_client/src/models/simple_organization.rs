/*
 * server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SimpleOrganization : Organization info used in joins
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SimpleOrganization {
    #[serde(rename = "_id")]
    pub _id: String,
    #[serde(rename = "avatar_email", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub avatar_email: Option<Option<String>>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "slug")]
    pub slug: String,
}

impl SimpleOrganization {
    /// Organization info used in joins
    pub fn new(_id: String, name: String, slug: String) -> SimpleOrganization {
        SimpleOrganization {
            _id,
            avatar_email: None,
            name,
            slug,
        }
    }
}

